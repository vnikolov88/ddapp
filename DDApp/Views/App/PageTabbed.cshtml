@model HydratedAppPage

@await Html.PartialAsync("PageHeader.cshtml")


<section id="PageContainer">
    @{
        var currentComponentIndex = 0;
        var currentTabName = Model.TabGroups.First().Key;
    }
    <ul class="nav nav-pills mb-12 grid-container" id="pills-tab" role="tablist">
        @foreach (var tabGroup in Model.TabGroups)
        {
            <li class="nav-item">
                <a class="nav-link @(tabGroup.Key == currentTabName ? "active": null)" id="pills-@tabGroup.Key-tab" data-toggle="pill" role="tab" aria-controls="pills-@tabGroup.Key" aria-selected="true">@tabGroup.Key</a>
            </li>
        }
    </ul>
    <div class="tab-content" id="pills-tabContent">
        @foreach (var tabGroup in Model.TabGroups)
        {
            <div class="tab-pane fade @(tabGroup.Key == currentTabName ? "show active": null)" id="pills-@tabGroup.Key" role="tabpanel" aria-labelledby="pills-@tabGroup.Key-tab">
                @for (var groupSize = tabGroup.Value;
                 groupSize > 0 && Model.Components.Count > currentComponentIndex;
                 ++currentComponentIndex, --groupSize)
                {
                    @Html.DisplayFor(model => Model.Components[currentComponentIndex], Model.Components[currentComponentIndex].GetType().Name as string)
                }
            </div>
        }
    </div>
    
    <link rel="stylesheet" href="./app.min.css" />
</section>